extends layout

block append scripts
  script(src="../lib/angular/angular.min.js")
  script(src="../lib/angular-sanitize/angular-sanitize.js")
  script(src="../lib/angular-translate/dist/angular-translate.min.js")
  script(src="../lib/angular-translate/dist/angular-translate-loader-url/angular-translate-loader-url.min.js")
  script(src="/lib/angular-app/index_slim.js")

  script(src="../lib/chartjs/Chart.min.js")
  script(src="../scripts/host_status.js")

block append links
  link(rel="stylesheet" href="/style/input_elements.css")
  link(rel="stylesheet" href="/style/responsive_table.css")
  link(rel="stylesheet" href="/style/host_status.css")
  link(rel="stylesheet" href="/style/form.css")
  
block append content
  div.content(ng-app="Pronghorn" ng-controller="HostStatus")
    div.title-bar
        h3.title System
    div.workspace

      div.graphs
        div.graph
          canvas#systemMemChart
          label System Memory
        div.graph
          canvas#systemCpuChart
          label(ng-if="secondPoll") System CPU
        div.pie-graph
          canvas#moduleCpuChart
          div.resetButtonContainer(ng-if="!core.status")
            button.primary-action(ng-click="attemptRestart();" title="Try Again")
             label Try Again
        div.graph
          canvas#loadAvgsChart
          label CPU Load Average

      div.overview

        div.core
          h2.title Pronghorn
          div.details
            div.set
              div.label Status
              div.value(class="{{core.status ? 'status online' : 'status offline'}}")
                span {{core.status ? 'online' : 'offline'}}
            div.set
              div.label PID
              div.value {{core.pid}}
            div.set
              div.label Version
              div.value {{core.pronghornVersion || ''}}
            div.set
              div.label Uptime
              div.value {{secondsToPrettyDate(core.uptime, 'seconds')}}
          div.memory
            div.set
              div.label Core Mem
              div.value {{bytesToPrettyMem(core.memory) || ''}}
            div.set
              div.label Pronghorn Mem
              div.value {{bytesToPrettyMem(system.memoryAlloc.pronghornUsed) || ''}}
          div.cpu
            div.set
              div.label Core CPU
              div.value {{core.displayCpu ? amountToPrettyPercentage(core.displayCpu) : ''}}
            div.set
              div.label Pronghorn CPU
              div.value {{system.cpuAlloc.pronghornUsed ? amountToPrettyPercentage(system.cpuAlloc.pronghornUsed) : ''}}
            

          button.primary-action.download(ng-click="generateBlueprint()") Generate Blueprint

        div.system
          h2.title System
          div.versions
            div.set
              div.label Node Version
              div.value {{core.nodeVersion || ''}}
            div.set
              div.label V8 Version
              div.value {{core.v8Version || ''}}
            div.set
              div.label Kernel Version
              div.value {{system.osVersion || ''}}
          div.details
            div.set
              div.label CPU
              div.value {{system.cpuModel}}
            div.set
              div.label Uptime
              div.value {{secondsToPrettyDate(system.uptime, 'seconds')}}

      div
        div.list.applications
          h2 Applications

          table.responsive
            thead
              tr.column-names
                th(ng-repeat="col in appCols"
                   ng-click="setSorter('apps', col.eleName, col.sorter)"
                   ng-class="col.sorter && ('sort-by ' + (sorters.apps.col === col.eleName && sorters.apps.direction))")
                  label {{col.display}}
              tr.column-filters
                th(ng-repeat="col in appCols" ng-class="{ filtered: filters.apps[col.eleName] }")
                  input(ng-if="col.filter"
                        type="text"
                        ng-model="filters.apps[col.eleName]")
                  button.clear-filter(ng-if="col.filter"
                                      ng-click="clearFilter('apps', col.eleName)"
                                      title="Clear Filter")
                    label Clear Filter

            tbody
              tr(ng-repeat="app in modules | orderBy : sorters.apps.col : sorters.apps.direction !== 'descending' | filter: filters.apps" ng-click="moduleHealth(app.name)")
                td.status-column(data-label="Status")
                  span(class="{{app.status ? 'status online' : 'status offline'}}"
                       title="{{app.status ? 'Application Online' : 'Application Offline'}}")
                    label {{app.status ? 'online' : 'offline'}}
                td(data-label="Name") {{app.name}}
                td(data-label="Version") {{app.version || ''}}
                td(data-label="Pid") {{app.pid || ''}}
                td(data-label="Memory") {{bytesToPrettyMem(app.memory) || ''}}
                td(data-label="CPU") {{(app.displayCpu || app.displayCpu === 0) ? amountToPrettyPercentage(app.displayCpu) : ''}}
                td(data-label="Uptime") {{secondsToPrettyDate(app.uptime, 'seconds')}}
                td.actions(data-label="Actions")
                  button.restart(ng-click="restartModule(app); stopProp($event)"
                                 ng-if="app.status && !app.isProcessing"
                                 ng-disabled='app.hideActions'
                                 title="Restart")
                    label Restart
                  button.run(ng-click="startModule(app); stopProp($event)"
                             ng-if="!app.status && !app.isProcessing"
                             ng-disabled='app.hideActions'
                             title="Run")
                    label Run
                  button.stop(ng-click="stopModule(app); stopProp($event)"
                               ng-if="app.status && !app.isProcessing"
                               ng-disabled='app.hideActions'
                               title="Stop")
                    label Stop
                  button.processing(ng-if="app.isProcessing" title="Processing")

        div.list.adapters
          h2 Adapters

          table.responsive
            thead
              tr.column-names
                th(ng-repeat="col in adapterCols"
                   ng-click="setSorter('adapters', col.eleName, col.sorter)"
                   ng-class="col.sorter && ('sort-by ' + (sorters.adapters.col === col.eleName && sorters.adapters.direction))")
                  label {{col.display}}
              tr.column-filters
                th(ng-repeat="col in adapterCols" ng-class="{ filtered: filters.adapters[col.eleName] }")
                  input(ng-if="col.filter"
                        type="text"
                        ng-model="filters.adapters[col.eleName]")
                  button.clear-filter(ng-if="col.filter"
                                      ng-click="clearFilter('adapters', col.eleName)"
                                      title="Clear Filter")
                    label Clear Filter

            tbody
              tr(ng-repeat="adapter in modules | orderBy: sorters.adapters.col : sorters.adapters.direction !== 'descending' | filter: filters.adapters" ng-click="moduleHealth(adapter.name)")
                td.status-column(data-label="Status")
                  span(class="{{adapter.status ? 'status online' : 'status offline'}}"
                       title="{{adapter.status ? 'Adapter Online' : 'Adapter Offline'}}")
                    label {{adapter.status ? 'online' : 'offline'}}
                td.status-column(data-label="Connection")
                  span(class="{{adapter.connStatus ? 'status online' : 'status offline'}}"
                       title="{{adapter.connStatus ? 'Connection Online' : 'Connection Offline'}}")
                    label {{adapter.connStatus ? 'online' : 'offline'}}
                td(data-label="Name") {{adapter.name}}
                td(data-label="Type") {{adapter.adapter}}
                td(data-label="Version") {{adapter.version || ''}}
                td(data-label="Pid") {{adapter.pid || ''}}
                td(data-label="Memory") {{bytesToPrettyMem(adapter.memory) || ''}}
                td(data-label="CPU") {{(adapter.displayCpu || adapter.displayCpu === 0) ? amountToPrettyPercentage(adapter.displayCpu) : ''}}
                td(data-label="Uptime") {{secondsToPrettyDate(adapter.uptime, 'seconds')}}
                td.actions(data-label="Actions")
                  button.restart(ng-click="restartModule(adapter); stopProp($event)"
                                 ng-if="adapter.status && !adapter.isProcessing"
                                 ng-disabled='adapter.hideActions'
                                 title="Restart")
                    label Restart
                  button.run(ng-click="startModule(adapter); stopProp($event)"
                             ng-if="!adapter.status && !adapter.isProcessing"
                             ng-disabled='adapter.hideActions'
                             title="Run")
                    label Run
                  button.stop(ng-click="stopModule(adapter); stopProp($event)"
                               ng-if="adapter.status && !adapter.isProcessing"
                               ng-disabled='adapter.hideActions'
                               title="Stop")
                    label Stop

                  button.processing(ng-if="adapter.isProcessing"
                                    title="Processing")